
import java.awt.Desktop;
import java.io.File;
import java.net.URI;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Address;
import javax.mail.Authenticator;
import javax.mail.BodyPart;
import javax.mail.Flags;
import javax.mail.Folder;
import javax.mail.Message;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Store;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.mail.search.FlagTerm;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USER
 */
public class LoginPage1 extends javax.swing.JFrame {

    /**
     * Creates new form LoginPage1
     */
    public LoginPage1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LoginPage = new javax.swing.JPanel();
        login = new javax.swing.JPanel();
        User = new javax.swing.JLabel();
        Password = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();
        Login = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Logo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Compose = new javax.swing.JPanel();
        NewMessage = new javax.swing.JPanel();
        to = new javax.swing.JLabel();
        cc = new javax.swing.JLabel();
        bcc = new javax.swing.JLabel();
        sub = new javax.swing.JLabel();
        Text = new javax.swing.JLabel();
        toField = new javax.swing.JTextField();
        ccField = new javax.swing.JTextField();
        bccField = new javax.swing.JTextField();
        subField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        send = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        Close = new javax.swing.JButton();
        newMessage = new javax.swing.JLabel();
        Attach = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        toField1 = new javax.swing.JTextField();
        ccField1 = new javax.swing.JTextField();
        bccField1 = new javax.swing.JTextField();
        subField1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        send1 = new javax.swing.JButton();
        browse = new javax.swing.JButton();
        reset1 = new javax.swing.JButton();
        broweField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Close1 = new javax.swing.JButton();
        Main = new javax.swing.JPanel();
        Buttons = new javax.swing.JPanel();
        compose = new javax.swing.JButton();
        sent = new javax.swing.JButton();
        draft = new javax.swing.JButton();
        spam = new javax.swing.JButton();
        inbox1 = new javax.swing.JButton();
        signout = new javax.swing.JButton();
        inbox = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(863, 527));
        getContentPane().setLayout(new java.awt.CardLayout());

        LoginPage.setBackground(new java.awt.Color(0, 0, 0));
        LoginPage.setMaximumSize(new java.awt.Dimension(850, 540));
        LoginPage.setMinimumSize(new java.awt.Dimension(850, 540));
        LoginPage.setPreferredSize(new java.awt.Dimension(850, 540));
        LoginPage.setLayout(null);

        login.setBackground(new java.awt.Color(255, 255, 255));
        login.setLayout(null);

        User.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        User.setText("Email");
        login.add(User);
        User.setBounds(200, 200, 70, 29);

        Password.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Password.setText("Password");
        login.add(Password);
        Password.setBounds(200, 270, 70, 30);

        jTextField1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        login.add(jTextField1);
        jTextField1.setBounds(270, 200, 232, 29);

        jPasswordField1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPasswordField1.setPreferredSize(new java.awt.Dimension(59, 20));
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        login.add(jPasswordField1);
        jPasswordField1.setBounds(270, 270, 232, 30);

        jCheckBox1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jCheckBox1.setText("Stay Signed in");
        login.add(jCheckBox1);
        jCheckBox1.setBounds(150, 380, 110, 25);

        Login.setBackground(new java.awt.Color(0, 0, 0));
        Login.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Login.setForeground(new java.awt.Color(255, 255, 255));
        Login.setText("Sign in");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });
        login.add(Login);
        Login.setBounds(270, 330, 190, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Need Help ?");
        login.add(jLabel4);
        jLabel4.setBounds(410, 380, 90, 20);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/man.png"))); // NOI18N
        login.add(jLabel2);
        jLabel2.setBounds(290, 30, 150, 150);

        LoginPage.add(login);
        login.setBounds(60, 110, 730, 410);

        Logo.setBackground(new java.awt.Color(255, 255, 255));
        Logo.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/outview.jpg"))); // NOI18N
        Logo.add(jLabel1);
        jLabel1.setBounds(0, 0, 320, 90);

        LoginPage.add(Logo);
        Logo.setBounds(60, 20, 730, 90);

        getContentPane().add(LoginPage, "card2");

        Compose.setBackground(new java.awt.Color(0, 0, 0));
        Compose.setMinimumSize(new java.awt.Dimension(850, 540));
        Compose.setPreferredSize(new java.awt.Dimension(850, 540));
        Compose.setLayout(null);

        NewMessage.setBackground(new java.awt.Color(255, 255, 255));
        NewMessage.setLayout(null);

        to.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        to.setText("To");
        NewMessage.add(to);
        to.setBounds(80, 30, 80, 30);

        cc.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cc.setText("CC");
        NewMessage.add(cc);
        cc.setBounds(80, 80, 80, 30);

        bcc.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bcc.setText("BCC");
        NewMessage.add(bcc);
        bcc.setBounds(80, 130, 80, 30);

        sub.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sub.setText("Sub");
        NewMessage.add(sub);
        sub.setBounds(80, 180, 80, 30);

        Text.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Text.setText("Text");
        NewMessage.add(Text);
        Text.setBounds(80, 230, 80, 30);

        toField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        toField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toFieldActionPerformed(evt);
            }
        });
        NewMessage.add(toField);
        toField.setBounds(160, 30, 420, 30);

        ccField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ccField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccFieldActionPerformed(evt);
            }
        });
        NewMessage.add(ccField);
        ccField.setBounds(160, 80, 420, 30);

        bccField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        NewMessage.add(bccField);
        bccField.setBounds(160, 130, 420, 30);

        subField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        NewMessage.add(subField);
        subField.setBounds(160, 180, 420, 30);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        NewMessage.add(jScrollPane1);
        jScrollPane1.setBounds(160, 230, 420, 150);

        send.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        send.setText("Send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });
        NewMessage.add(send);
        send.setBounds(220, 400, 110, 30);

        reset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        NewMessage.add(reset);
        reset.setBounds(390, 400, 110, 30);

        Compose.add(NewMessage);
        NewMessage.setBounds(30, 40, 790, 460);

        Close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close.jpg"))); // NOI18N
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });
        Compose.add(Close);
        Close.setBounds(820, 0, 30, 30);

        newMessage.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        newMessage.setForeground(new java.awt.Color(255, 255, 255));
        newMessage.setText("New Message");
        Compose.add(newMessage);
        newMessage.setBounds(10, 0, 160, 30);

        getContentPane().add(Compose, "card4");

        Attach.setBackground(new java.awt.Color(0, 0, 0));
        Attach.setMinimumSize(new java.awt.Dimension(850, 540));
        Attach.setPreferredSize(new java.awt.Dimension(850, 540));
        Attach.setLayout(null);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(null);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("To");
        jPanel8.add(jLabel10);
        jLabel10.setBounds(80, 30, 80, 30);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("CC");
        jPanel8.add(jLabel11);
        jLabel11.setBounds(80, 80, 80, 30);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("BCC");
        jPanel8.add(jLabel12);
        jLabel12.setBounds(80, 130, 80, 30);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Sub");
        jPanel8.add(jLabel13);
        jLabel13.setBounds(80, 180, 80, 30);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("Text");
        jPanel8.add(jLabel14);
        jLabel14.setBounds(80, 230, 80, 30);

        toField1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        toField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toField1ActionPerformed(evt);
            }
        });
        jPanel8.add(toField1);
        toField1.setBounds(160, 30, 420, 30);

        ccField1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ccField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccField1ActionPerformed(evt);
            }
        });
        jPanel8.add(ccField1);
        ccField1.setBounds(160, 80, 420, 30);

        bccField1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel8.add(bccField1);
        bccField1.setBounds(160, 130, 420, 30);

        subField1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel8.add(subField1);
        subField1.setBounds(160, 180, 420, 30);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jPanel8.add(jScrollPane3);
        jScrollPane3.setBounds(160, 230, 420, 80);

        send1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        send1.setText("Send");
        send1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                send1ActionPerformed(evt);
            }
        });
        jPanel8.add(send1);
        send1.setBounds(160, 420, 110, 30);

        browse.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        browse.setText("Browse");
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });
        jPanel8.add(browse);
        browse.setBounds(470, 340, 110, 30);

        reset1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        reset1.setText("Reset");
        reset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset1ActionPerformed(evt);
            }
        });
        jPanel8.add(reset1);
        reset1.setBounds(320, 420, 110, 30);

        broweField.setEnabled(false);
        jPanel8.add(broweField);
        broweField.setBounds(160, 340, 280, 30);

        Attach.add(jPanel8);
        jPanel8.setBounds(30, 40, 790, 460);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Message with Attachment");
        Attach.add(jLabel5);
        jLabel5.setBounds(0, 0, 280, 30);

        Close1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close.jpg"))); // NOI18N
        Close1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Close1ActionPerformed(evt);
            }
        });
        Attach.add(Close1);
        Close1.setBounds(820, 0, 30, 30);

        getContentPane().add(Attach, "card5");

        Main.setBackground(new java.awt.Color(0, 0, 0));
        Main.setMinimumSize(new java.awt.Dimension(850, 540));
        Main.setLayout(null);

        Buttons.setBackground(new java.awt.Color(204, 204, 204));
        Buttons.setForeground(new java.awt.Color(255, 255, 255));
        Buttons.setLayout(null);

        compose.setBackground(new java.awt.Color(255, 255, 255));
        compose.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        compose.setText("Send Mail");
        compose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                composeActionPerformed(evt);
            }
        });
        Buttons.add(compose);
        compose.setBounds(0, 20, 200, 25);

        sent.setBackground(new java.awt.Color(255, 255, 255));
        sent.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sent.setText("Send  with Attachment");
        sent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sentActionPerformed(evt);
            }
        });
        Buttons.add(sent);
        sent.setBounds(0, 80, 200, 25);

        draft.setBackground(new java.awt.Color(255, 255, 255));
        draft.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        draft.setText("Change Password");
        draft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                draftActionPerformed(evt);
            }
        });
        Buttons.add(draft);
        draft.setBounds(0, 230, 200, 25);

        spam.setBackground(new java.awt.Color(255, 255, 255));
        spam.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        spam.setText("Create Account");
        spam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spamActionPerformed(evt);
            }
        });
        Buttons.add(spam);
        spam.setBounds(0, 300, 200, 25);

        inbox1.setBackground(new java.awt.Color(255, 255, 255));
        inbox1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        inbox1.setText("Inbox");
        inbox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inbox1ActionPerformed(evt);
            }
        });
        Buttons.add(inbox1);
        inbox1.setBounds(0, 150, 200, 25);

        signout.setBackground(new java.awt.Color(255, 255, 255));
        signout.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        signout.setText("Sign out");
        signout.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                Sign(evt);
            }
        });
        signout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signoutActionPerformed(evt);
            }
        });
        Buttons.add(signout);
        signout.setBounds(0, 370, 200, 25);

        Main.add(Buttons);
        Buttons.setBounds(20, 40, 200, 450);

        inbox.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inbox"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setEnabled(false);
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        inbox.add(jScrollPane2);
        jScrollPane2.setBounds(0, 0, 600, 450);

        Main.add(inbox);
        inbox.setBounds(240, 40, 600, 450);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel3AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        Main.add(jLabel3);
        jLabel3.setBounds(600, 0, 250, 30);

        getContentPane().add(Main, "card3");

        pack();
    }// </editor-fold>//GEN-END:initComponents
String uid=null;
String pass=null;
    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
        try {
            			
                         uid=jTextField1.getText();
                        pass=jPasswordField1.getText();
                        //Server Configure
                        Properties p=new Properties();
			p.put("mail.smtp.auth",true);
			p.put("mail.smtp.starttls.enable",true);
			p.put("mail.smtp.host","smtp.gmail.com");
			p.put("mail.smtp.port",587);
			
			//Client Config
			
			Authenticator auth=new Authenticator()
			{
				protected PasswordAuthentication getPasswordAuthentication()
				{
					return new PasswordAuthentication(uid,pass);
				}
			};
			
			//Seision Creation
                        
			Session session=Session.getInstance(p,auth);
                       System.out.println("Session "+session);
                      Transport transport=  session.getTransport("smtp");
                        try{
                            transport.connect("smtp.gmail.com",uid,pass);
                           
                            LoginPage.setVisible(false);
                            Main.setVisible(true);
                            
                            
                            
                        }
                        catch(Exception e)
                        {
                            JOptionPane.showMessageDialog(this,"Invalid User");
                        
                        }
        } catch (Exception e) {
            System.out.println("Error "+e.toString());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_LoginActionPerformed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
           toField.setText("");
           ccField.setText("");
           bccField.setText("");
           subField.setText("");
           jTextArea1.setText("");
    }//GEN-LAST:event_resetActionPerformed

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        Compose.setVisible(false);
        Main.setVisible(true);
        
    }//GEN-LAST:event_CloseActionPerformed

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        // TODO add your handling code here:
                
       
        String to=toField.getText();
        String sub=subField.getText();
        String compose=jTextArea1.getText();
        
       
         		try{
			

			//Server Config

			Properties p=new Properties();
			p.put("mail.smtp.auth",true);
			p.put("mail.smtp.starttls.enable",true);
			p.put("mail.smtp.host","smtp.gmail.com");
			p.put("mail.smtp.port",587);
			
			//Client Config
			
			Authenticator auth=new Authenticator()
			{
				protected PasswordAuthentication getPasswordAuthentication()
				{
					return new PasswordAuthentication(jTextField1.getText(),jPasswordField1.getText());
				}
			};
			
			//Session Creation
			Session session=Session.getInstance(p,auth);

			//Message Creation
			Message msg =new MimeMessage(session);
			msg.setFrom(new InternetAddress(jTextField1.getText()));
                        msg.setSubject(subField.getText());
			msg.setRecipients(Message.RecipientType.TO,InternetAddress.parse(to));
			msg.setText(compose);

			//Transportation

			Transport.send(msg);
			JOptionPane.showMessageDialog(null,"sent");
				
		}
		catch(Exception e)	
		{
                    JOptionPane.showMessageDialog(null, e);
                }

        {
        }
    }//GEN-LAST:event_sendActionPerformed

    private void toFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toFieldActionPerformed

    private void signoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signoutActionPerformed
        // TODO add your handling code here:
        
        Main.setVisible(false);
        inbox.setVisible(true);
        jTextField1.setText("");
        jPasswordField1.setText("");
        
    }//GEN-LAST:event_signoutActionPerformed

    private void composeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_composeActionPerformed
        // TODO add your handling code here:
        Main.setVisible(false);
        Compose.setVisible(true);
    }//GEN-LAST:event_composeActionPerformed

    private void inbox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inbox1ActionPerformed
        // TODO add your handling code here:
           Main.setVisible(false);
           Main.setVisible(true);
        
/*        try{
    //server Config
Properties prop=new Properties();
prop.put("mail.smtp.auth","true");
prop.put("mail.smtp.starttls.enable","true");
prop.put("mail.smtp.host","smtp.gmail.com");
prop.put("mail.smtp.port","587");
//client Authentication
Authenticator auth=new Authenticator()
{
protected PasswordAuthentication getPasswordAuthentication()
{
return new PasswordAuthentication(jTextField1.getText(),jPasswordField1.getText());
}
};
//Session Creation
  Session session= Session.getInstance(prop,auth);

Store store=session.getStore("imaps");
store.connect("imap.gmail.com",jTextField1.getText(),jPasswordField1.getText());
Folder folder=store.getFolder("INBOX");//get inbox

folder.open(Folder.READ_ONLY);//open folder only to read

// search for all "unseen" messages
    Flags seen = new Flags(Flags.Flag.SEEN);
    FlagTerm unseenFlagTerm = new FlagTerm(seen, false);
    Message messages[] = folder.search(unseenFlagTerm);
//Message message[]=folder.getMessages();

DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
int count=1;
for(int i=0;i<messages.length;i++){
//print subjects of all mails in the inbox
System.out.println(messages[i].getSubject());
model.addRow(new Object[] {count,messages[i].getSubject()});
count++;
//anything else you want
}
//close connections
folder.close(true);
store.close();
Main.setVisible(false);
Buttons.setVisible(true);
}
catch (Exception e) {
System.out.println(e.toString());
}*/
    }//GEN-LAST:event_inbox1ActionPerformed

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded

        
        
        

        try{
    //server Config
Properties prop=new Properties();
prop.put("mail.smtp.auth","true");
prop.put("mail.smtp.starttls.enable","true");
prop.put("mail.smtp.host","smtp.gmail.com");
prop.put("mail.smtp.port","587");
//client Authentication
Authenticator auth=new Authenticator()
{
protected PasswordAuthentication getPasswordAuthentication()
{
return new PasswordAuthentication(uid,pass);
}
};
//Session Creation
  Session session= Session.getInstance(prop,auth);

Store store=session.getStore("imaps");
store.connect("imap.gmail.com",uid,pass);
Folder folder=store.getFolder("INBOX");//get inbox
folder.open(Folder.READ_ONLY);//open folder only to read

// search for all "unseen" messages
    Flags seen = new Flags(Flags.Flag.SEEN);
    FlagTerm unseenFlagTerm = new FlagTerm(seen, false);
    Message messages[] = folder.search(unseenFlagTerm);
//Message message[]=folder.getMessages()

DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
model.getDataVector().removeAllElements();

model.fireTableDataChanged();
int count=1;
for(int i=0;i<messages.length;i++){
//print subjects of all mails in the inbox
System.out.println(messages[i].getSubject());
model.addRow(new Object[] {messages[i].getSubject()});

count++;
//anything else you want
}
jTable1.setModel(model);

//close connections
folder.close(true);
store.close();
jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
    @Override
    public void valueChanged(ListSelectionEvent lse) {
 
   
        lse.getLastIndex();
    }
});
}
catch (Exception e) {
System.out.println(e.toString());
}

        
    /*jTable1.getModel().addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent tme) {
            
           JOptionPane.showMessageDialog(LoginPage1.this,"Clicked");
            
            }
        });*/
        
        
        

        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded

    private void ccFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ccFieldActionPerformed

    private void Sign(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_Sign
        // TODO add your handling code here:
    }//GEN-LAST:event_Sign

    private void toField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toField1ActionPerformed

    private void ccField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ccField1ActionPerformed

    private void send1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_send1ActionPerformed
String filename=broweField.getText();

 String host = "smtp.gmail.com";
 String uid=jTextField1.getText();
 
        String pass = jPasswordField1.getText();
        String from = uid;
        String toAddress = toField1.getText();
        // Get system properties
        Properties props = System.getProperties();
        props.put("mail.smtp.host", host);
        props.put("mail.smtps.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        Authenticator auth=new Authenticator() {
    @Override
    protected PasswordAuthentication getPasswordAuthentication() {
        return new PasswordAuthentication(uid, pass);
        //To change body of generated methods, choose Tools | Templates.
    }

        
        };
        Session session = Session.getInstance(props, auth);

        try {
        MimeMessage message = new MimeMessage(session);

        message.setFrom(new InternetAddress(from));

        message.setRecipients(Message.RecipientType.TO, toAddress);

        message.setSubject(subField1.getText());

            BodyPart messageBodyPart = new MimeBodyPart();

        messageBodyPart.setText(jTextArea2.getText());

            Multipart multipart = new MimeMultipart();

        multipart.addBodyPart(messageBodyPart);

        messageBodyPart = new MimeBodyPart();

            DataSource source = new FileDataSource(filename);

        messageBodyPart.setDataHandler(new DataHandler(source));

        messageBodyPart.setFileName(filename);

        multipart.addBodyPart(messageBodyPart);

        message.setContent(multipart);

            Transport tr = session.getTransport("smtps");
            tr.connect(host, from, pass);
            tr.sendMessage(message, message.getAllRecipients());
            System.out.println("Mail Sent Successfully");
            tr.close();
JOptionPane.showMessageDialog(this, "Sent !");
        } catch (Exception sfe) {

            System.out.println(sfe);
        }





        // TODO add your handling code here:
    }//GEN-LAST:event_send1ActionPerformed

    private void reset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset1ActionPerformed
        // TODO add your handling code here:
           toField1.setText("");
           ccField1.setText("");
           bccField1.setText("");
           subField1.setText("");
           jTextArea2.setText("");
           broweField.setText("");
        
        
    }//GEN-LAST:event_reset1ActionPerformed

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed

JFileChooser chooser=new JFileChooser();
chooser.showOpenDialog(this);
        File f=  chooser.getSelectedFile();
broweField.setText(f.getPath());



        // TODO add your handling code here:
    }//GEN-LAST:event_browseActionPerformed

    private void sentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sentActionPerformed
        // TODO add your handling code here:
        Main.setVisible(false);
        Attach.setVisible(true);
    }//GEN-LAST:event_sentActionPerformed

    private void jLabel3AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel3AncestorAdded
jLabel3.setText(uid);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3AncestorAdded

    private void draftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_draftActionPerformed

        Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
    if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
        try {
            desktop.browse(new URI("http://www.gmail.com"));
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
        
// TODO add your handling code here:
    }//GEN-LAST:event_draftActionPerformed

    private void spamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spamActionPerformed

 Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
    if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
        try {
            desktop.browse(new URI("https://accounts.google.com/SignUp?service=mail&continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&ltmpl=default"));
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    }//GEN-LAST:event_spamActionPerformed

    private void Close1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Close1ActionPerformed
        Attach.setVisible(false);
        Main.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_Close1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked


        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Attach;
    private javax.swing.JPanel Buttons;
    private javax.swing.JButton Close;
    private javax.swing.JButton Close1;
    private javax.swing.JPanel Compose;
    private javax.swing.JButton Login;
    private javax.swing.JPanel LoginPage;
    private javax.swing.JPanel Logo;
    private javax.swing.JPanel Main;
    private javax.swing.JPanel NewMessage;
    private javax.swing.JLabel Password;
    private javax.swing.JLabel Text;
    private javax.swing.JLabel User;
    private javax.swing.JLabel bcc;
    private javax.swing.JTextField bccField;
    private javax.swing.JTextField bccField1;
    private javax.swing.JTextField broweField;
    private javax.swing.JButton browse;
    private javax.swing.JLabel cc;
    private javax.swing.JTextField ccField;
    private javax.swing.JTextField ccField1;
    private javax.swing.JButton compose;
    private javax.swing.JButton draft;
    private javax.swing.JPanel inbox;
    private javax.swing.JButton inbox1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel login;
    private javax.swing.JLabel newMessage;
    private javax.swing.JButton reset;
    private javax.swing.JButton reset1;
    private javax.swing.JButton send;
    private javax.swing.JButton send1;
    private javax.swing.JButton sent;
    private javax.swing.JButton signout;
    private javax.swing.JButton spam;
    private javax.swing.JLabel sub;
    private javax.swing.JTextField subField;
    private javax.swing.JTextField subField1;
    private javax.swing.JLabel to;
    private javax.swing.JTextField toField;
    private javax.swing.JTextField toField1;
    // End of variables declaration//GEN-END:variables
}
